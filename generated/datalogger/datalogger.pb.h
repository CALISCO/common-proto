/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9-dev at Sun Mar 26 15:43:17 2017. */

#ifndef PB_DATALOGGER_PB_H_INCLUDED
#define PB_DATALOGGER_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _DataloggerRecord {
    bool has_timestamp_ms;
    int32_t timestamp_ms;
/* @@protoc_insertion_point(struct:DataloggerRecord) */
} DataloggerRecord;

/* Default values for struct fields */

/* Initializer values for message structs */
#define DataloggerRecord_init_default            {false, 0}
#define DataloggerRecord_init_zero               {false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define DataloggerRecord_timestamp_ms_tag        1

/* Struct field encoding specification for nanopb */
extern const pb_field_t DataloggerRecord_fields[2];

/* Maximum encoded size of messages (where known) */
#define DataloggerRecord_size                    11

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define DATALOGGER_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
