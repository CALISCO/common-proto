/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9-dev at Tue Mar 28 22:12:06 2017. */

#ifndef PB_DATALOGGER_PB_H_INCLUDED
#define PB_DATALOGGER_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _CanMessage_FrameType {
    CanMessage_FrameType_STANDARD_FRAME = 0,
    CanMessage_FrameType_EXTENDED_FRAME = 1
} CanMessage_FrameType;
#define _CanMessage_FrameType_MIN CanMessage_FrameType_STANDARD_FRAME
#define _CanMessage_FrameType_MAX CanMessage_FrameType_EXTENDED_FRAME
#define _CanMessage_FrameType_ARRAYSIZE ((CanMessage_FrameType)(CanMessage_FrameType_EXTENDED_FRAME+1))

typedef enum _CanMessage_RtrType {
    CanMessage_RtrType_DATA_FRAME = 0,
    CanMessage_RtrType_REMOTE_FRAME = 1
} CanMessage_RtrType;
#define _CanMessage_RtrType_MIN CanMessage_RtrType_DATA_FRAME
#define _CanMessage_RtrType_MAX CanMessage_RtrType_REMOTE_FRAME
#define _CanMessage_RtrType_ARRAYSIZE ((CanMessage_RtrType)(CanMessage_RtrType_REMOTE_FRAME+1))

typedef enum _VoltageReading_Rail {
    VoltageReading_Rail_RAIL_12V = 0,
    VoltageReading_Rail_RAIL_5V = 1,
    VoltageReading_Rail_RAIL_3V3 = 2,
    VoltageReading_Rail_RAIL_SUPERCAP = 3
} VoltageReading_Rail;
#define _VoltageReading_Rail_MIN VoltageReading_Rail_RAIL_12V
#define _VoltageReading_Rail_MAX VoltageReading_Rail_RAIL_SUPERCAP
#define _VoltageReading_Rail_ARRAYSIZE ((VoltageReading_Rail)(VoltageReading_Rail_RAIL_SUPERCAP+1))

typedef enum _TimingPulse_Source {
    TimingPulse_Source_SOURCE_RTC = 0
} TimingPulse_Source;
#define _TimingPulse_Source_MIN TimingPulse_Source_SOURCE_RTC
#define _TimingPulse_Source_MAX TimingPulse_Source_SOURCE_RTC
#define _TimingPulse_Source_ARRAYSIZE ((TimingPulse_Source)(TimingPulse_Source_SOURCE_RTC+1))

typedef enum _CanErrorCounter_ErrorCounterSource {
    CanErrorCounter_ErrorCounterSource_TRANSMIT_COUNTER = 0,
    CanErrorCounter_ErrorCounterSource_RECEIVE_COUNTER = 1
} CanErrorCounter_ErrorCounterSource;
#define _CanErrorCounter_ErrorCounterSource_MIN CanErrorCounter_ErrorCounterSource_TRANSMIT_COUNTER
#define _CanErrorCounter_ErrorCounterSource_MAX CanErrorCounter_ErrorCounterSource_RECEIVE_COUNTER
#define _CanErrorCounter_ErrorCounterSource_ARRAYSIZE ((CanErrorCounter_ErrorCounterSource)(CanErrorCounter_ErrorCounterSource_RECEIVE_COUNTER+1))

/* Struct definitions */
typedef struct _TimingPulse {
    char dummy_field;
/* @@protoc_insertion_point(struct:TimingPulse) */
} TimingPulse;

typedef struct _CanErrorCounter {
    bool has_count;
    uint32_t count;
    bool has_source;
    CanErrorCounter_ErrorCounterSource source;
/* @@protoc_insertion_point(struct:CanErrorCounter) */
} CanErrorCounter;

typedef PB_BYTES_ARRAY_T(8) CanMessage_data_t;
typedef struct _CanMessage {
    bool has_id;
    uint32_t id;
    bool has_length;
    CanMessage_FrameType length;
    bool has_rtr;
    CanMessage_RtrType rtr;
    bool has_data;
    CanMessage_data_t data;
/* @@protoc_insertion_point(struct:CanMessage) */
} CanMessage;

typedef struct _RtcTime {
    bool has_year;
    uint32_t year;
    bool has_month;
    uint32_t month;
    bool has_day;
    uint32_t day;
    bool has_hour;
    uint32_t hour;
    bool has_minute;
    uint32_t minute;
    bool has_second;
    uint32_t second;
    bool has_millisecond;
    uint32_t millisecond;
/* @@protoc_insertion_point(struct:RtcTime) */
} RtcTime;

typedef struct _StatisticalAggregate {
    bool has_samples;
    uint32_t samples;
    bool has_min;
    uint32_t min;
    bool has_max;
    uint32_t max;
    bool has_avg;
    uint32_t avg;
    bool has_stdev;
    uint32_t stdev;
/* @@protoc_insertion_point(struct:StatisticalAggregate) */
} StatisticalAggregate;

typedef struct _VoltageReading {
    bool has_rail;
    VoltageReading_Rail rail;
    bool has_millivolts;
    StatisticalAggregate millivolts;
/* @@protoc_insertion_point(struct:VoltageReading) */
} VoltageReading;

typedef struct _DataloggerPayload {
    pb_size_t which_value;
    union {
        CanMessage canMessage;
        CanErrorCounter canError;
        VoltageReading voltageReading;
        TimingPulse timingPulse;
        RtcTime rtcTime;
    } value;
/* @@protoc_insertion_point(struct:DataloggerPayload) */
} DataloggerPayload;

typedef struct _DataloggerRecord {
    bool has_timestamp_ms;
    uint32_t timestamp_ms;
    bool has_timestamp_variability;
    uint32_t timestamp_variability;
    bool has_payload;
    DataloggerPayload payload;
/* @@protoc_insertion_point(struct:DataloggerRecord) */
} DataloggerRecord;

/* Default values for struct fields */

/* Initializer values for message structs */
#define StatisticalAggregate_init_default        {false, 0, false, 0, false, 0, false, 0, false, 0}
#define DataloggerRecord_init_default            {false, 0, false, 0, false, DataloggerPayload_init_default}
#define DataloggerPayload_init_default           {0, {CanMessage_init_default}}
#define CanMessage_init_default                  {false, 0, false, (CanMessage_FrameType)0, false, (CanMessage_RtrType)0, false, {0, {0}}}
#define VoltageReading_init_default              {false, (VoltageReading_Rail)0, false, StatisticalAggregate_init_default}
#define TimingPulse_init_default                 {0}
#define RtcTime_init_default                     {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define CanErrorCounter_init_default             {false, 0, false, (CanErrorCounter_ErrorCounterSource)0}
#define StatisticalAggregate_init_zero           {false, 0, false, 0, false, 0, false, 0, false, 0}
#define DataloggerRecord_init_zero               {false, 0, false, 0, false, DataloggerPayload_init_zero}
#define DataloggerPayload_init_zero              {0, {CanMessage_init_zero}}
#define CanMessage_init_zero                     {false, 0, false, (CanMessage_FrameType)0, false, (CanMessage_RtrType)0, false, {0, {0}}}
#define VoltageReading_init_zero                 {false, (VoltageReading_Rail)0, false, StatisticalAggregate_init_zero}
#define TimingPulse_init_zero                    {0}
#define RtcTime_init_zero                        {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define CanErrorCounter_init_zero                {false, 0, false, (CanErrorCounter_ErrorCounterSource)0}

/* Field tags (for use in manual encoding/decoding) */
#define CanErrorCounter_source_tag               3
#define CanErrorCounter_count_tag                2
#define CanMessage_id_tag                        1
#define CanMessage_length_tag                    2
#define CanMessage_rtr_tag                       3
#define CanMessage_data_tag                      4
#define RtcTime_year_tag                         1
#define RtcTime_month_tag                        2
#define RtcTime_day_tag                          3
#define RtcTime_hour_tag                         4
#define RtcTime_minute_tag                       5
#define RtcTime_second_tag                       6
#define RtcTime_millisecond_tag                  7
#define StatisticalAggregate_samples_tag         1
#define StatisticalAggregate_min_tag             2
#define StatisticalAggregate_max_tag             3
#define StatisticalAggregate_avg_tag             4
#define StatisticalAggregate_stdev_tag           5
#define VoltageReading_rail_tag                  1
#define VoltageReading_millivolts_tag            2
#define DataloggerPayload_canMessage_tag         1
#define DataloggerPayload_canError_tag           2
#define DataloggerPayload_voltageReading_tag     3
#define DataloggerPayload_timingPulse_tag        4
#define DataloggerPayload_rtcTime_tag            5
#define DataloggerRecord_timestamp_ms_tag        1
#define DataloggerRecord_timestamp_variability_tag 2
#define DataloggerRecord_payload_tag             3

/* Struct field encoding specification for nanopb */
extern const pb_field_t StatisticalAggregate_fields[6];
extern const pb_field_t DataloggerRecord_fields[4];
extern const pb_field_t DataloggerPayload_fields[6];
extern const pb_field_t CanMessage_fields[5];
extern const pb_field_t VoltageReading_fields[3];
extern const pb_field_t TimingPulse_fields[1];
extern const pb_field_t RtcTime_fields[8];
extern const pb_field_t CanErrorCounter_fields[3];

/* Maximum encoded size of messages (where known) */
#define StatisticalAggregate_size                30
#define DataloggerRecord_size                    58
#define DataloggerPayload_size                   44
#define CanMessage_size                          20
#define VoltageReading_size                      34
#define TimingPulse_size                         0
#define RtcTime_size                             42
#define CanErrorCounter_size                     8

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define DATALOGGER_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
